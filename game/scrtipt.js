let game = [
  {
    question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç –±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã–π –ª–µ—Ç–∞—Ç–µ–ª—å–Ω—ã–π –∞–ø–ø–∞—Ä–∞—Ç?',
    variants: ['–¥—Ä–æ–Ω', '—Ñ–∞—ç—Ç–æ–Ω', '–º–∞—Ö–∞–æ–Ω', '–¥–µ—Å–µ–ø—Ç–∏–∫–æ–Ω'],
    answer: 0,
  },
  {
    question: '–í –∫–∞–∫–æ–π –∏–≥—Ä–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –º—è—á?',
    variants: ['–≤–æ–ª–µ–π–±–æ–ª', '–±–µ–π—Å–±–æ–ª', '—Ç–µ–Ω–Ω–∏—Å', '–∫–µ—Ä–ª–∏–Ω–≥'],
    answer: 3,
  },
  {
    question: '–í —á–µ—Å—Ç—å –∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω –æ–¥–∏–Ω –∏–∑ –≤–∏–¥–æ–≤ –Ω–∞—Å–µ–∫–æ–º—ã—Ö –∏–∑ —Ä–æ–¥–∞ –º–æ—Ü–∞—Ä—Ç–µ–ª–ª–∞?',
    variants: ['–ñ—é–ª—è –í–µ—Ä–Ω–∞', '–õ—é–¥–≤–∏–≥–∞ –≤–∞–Ω –ë–µ—Ç—Ö–æ–≤–µ–Ω–∞', '–ú–∞—Ä–∏–∏ –ö—é—Ä–∏', '–ü–æ–ª—è –°–µ–∑–∞–Ω–Ω–∞'],
    answer: 1,
  },
  {
    question: '–ß—Ç–æ –≤ —Å–∫–∞–∑–∫–∞—Ö –±—ã–ª–æ —Å–µ–º–∏–º–∏–ª—å–Ω—ã–º?',
    variants: ['–∫–æ–≤–µ—Ä', '–æ–¥–µ–∂–¥–∞', '—Å–∞–ø–æ–≥–∏', '–º–æ—Ç–æ—Ü–∏–∫–ª'],
    answer: 0,
  },
  {
    question: '–ö–∞–∫ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –ø–æ–¥—Ä—è–¥?',
    variants: ['–∫–∞—Ä—É—Å–µ–ª—å', '–±–∞—Ä–∞–±–∞–Ω', '—é–ª–∞', '—Ä—É–ª–µ—Ç–∫–∞'],
    answer: 0,
  },
  {
    question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞, –∏–∑–±–∞–≤–ª—è—é—â–µ–≥–æ –ª–µ—Å –æ—Ç –±–æ–ª–µ–∑–Ω–µ–π –∏ –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π?',
    variants: ['–ª–µ—Å–Ω–∏–∫', '–ª–µ—Å–æ–≤–∏–∫', '–ª–µ—à–∏–π', '–ª–µ—Å–æ–ø–∞—Ç–æ–ª–æ–≥'],
    answer: 3,
  },
  {
    question: '–ö—Ç–æ –Ω–µ —à–∞—Ö–º–∞—Ç–∏—Å—Ç?',
    variants: ['–Ø–Ω –ù–µ–ø–æ–º–Ω—è—â–∏–π', '–ú–∞–≥–Ω—É—Å –ö–∞—Ä–ª—Å–µ–Ω', '–°–µ—Ä–≥–µ–π –ö–∞—Ä—è–∫–∏–Ω', '–£–ª–µ-–≠–π–Ω–∞—Ä –ë—å–æ—Ä–Ω–¥–∞–ª–µ–Ω'],
    answer: 3,
  },
  {
    question: '–ö–∞–∫–∞—è –∏–∑ –ø–ª–∞–Ω–µ—Ç –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∞–º–∞—è –≥–æ—Ä—è—á–∞—è?',
    variants: ['–í–µ–Ω–µ—Ä–∞', '–ú–∞—Ä—Å', '–Æ–ø–∏—Ç—Ä–µ', '–ù–µ–ø—Ç—É–Ω'],
    answer: 0,
  },
  {
    question: '–ö–∞–∫–æ–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ª—É—á–∏–ª —Å–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑-–∑–∞ —Å–∏–Ω–µ–π –ª–∏–Ω–∏–∏ –≤ –µ–≥–æ —Å–ø–µ–∫—Ç—Ä–µ?',
    variants: ['—Ä–æ–¥–∏–π', '–∏–Ω–¥–∏–π', '—Ü–µ—Ä–∏–π', '–Ω–µ–ø—Ç—É–Ω–∏–π'],
    answer: 1,
  },
  {
    question:
      '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –∑–∞–ø–∏—Å–∞–ª–∏ –ø–µ—Å–Ω—é, –∫–æ—Ç–æ—Ä—É—é —Å–ª—É—á–∞–π–Ω–æ –Ω–∞—à–ª–∏ –Ω–∞ —á–µ—Ä–¥–∞–∫–µ –¥–æ–º–∞ –≤ –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏–∏ –≤ –Ω–æ—è–±—Ä–µ 2021 –≥–æ–¥–∞?',
    variants: ['¬´–ë–∏—Ç–ª–∑¬ª', '¬´–ö–≤–∏–Ω¬ª', '¬´–†–æ–ª–ª–∏–Ω–≥ —Å—Ç–æ—É–Ω–∑¬ª', '¬´–ü–∏–Ω–∫ —Ñ–ª–æ–π–¥¬ª'],
    answer: 0,
  },
  {
    question: '–ß—Ç–æ –∏—Ç–∞–ª—å—è–Ω—Ü—ã –Ω–∞–∑—ã–≤–∞—é—Ç ¬´–º–∞–¥–æ–Ω–Ω–∞—Ä–∏¬ª?',
    variants: ['—Ä–∏—Å—É–Ω–∫–∏ –Ω–∞ –∞—Å—Ñ–∞–ª—å—Ç–µ', '–≤—É–∞–ª—å', '–ø–µ—Ä–∏–æ–¥ –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ', '—Å–æ—Ä—Ç —è–±–ª–æ–∫'],
    answer: 0,
  },
  {
    question:
      '–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –ì–µ–æ—Ä–≥–∏–π –î–∞–Ω–µ–ª–∏—è —Å–æ–±–∏—Ä–∞–ª—Å—è –≤—ã–Ω—É–∂–¥–µ–Ω–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –≤ –∫–æ–º–µ–¥–∏–∏ ¬´–ö–∏–Ω-–¥–∑–∞-–¥–∑–∞¬ª —É–∂–µ –ø—Ä–∏ –º–æ–Ω—Ç–∞–∂–µ —Ñ–∏–ª—å–º–∞?',
    variants: ['—á–∞—Ç–ª–∞–Ω–∏–Ω', '–∫—É', '–ø–∞—Ü–∞–∫', '–ö–¶'],
    answer: 1,
  },
  {
    question: '–ß–µ–º –≤ –ø–æ—Ä—Ç–æ–≤—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö —Å 18-–≥–æ –ø–æ –Ω–∞—á–∞–ª–æ 20-–≥–æ –≤–µ–∫–∞ –∑–∞–Ω–∏–º–∞–ª–∏—Å—å –∫—Ä—é—á–Ω–∏–∫–∏?',
    variants: ['–ª–æ–≤–∏–ª–∏ —Ä—ã–±—É', '–ø–µ—Ä–µ–Ω–æ—Å–∏–ª–∏ —Ç—è–∂–µ—Å—Ç–∏', '–ø–ª–µ–ª–∏ —Å–µ—Ç–∏', '—Å–ø–ª–∞–≤–ª—è–ª–∏ –±—Ä–µ–≤–Ω–∞'],
    answer: 1,
  },
  {
    question: '–ß—Ç–æ –ø–∏—Å–∞—Ç–µ–ª—å –¢–æ–º–∞—Å –ü–∏–Ω—á–æ–Ω –Ω–∞–∑–≤–∞–ª –ø–∞–º—è—Ç–Ω–∏–∫–æ–º —É—Ö–æ–¥—É –æ—Ç–æ—Ä–≤–∞–≤—à–µ–π—Å—è –õ—É–Ω—ã?',
    variants: ['–°—Ç–æ—É–Ω—Ö–µ–Ω–¥–∂', '–ø—É—Å—Ç—ã–Ω—é –°–∞—Ö–∞—Ä–∞', '–ë–æ–ª—å—à–æ–π –ë–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–∏—Ñ', '–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω'],
    answer: 3,
  },
  {
    question: '–ö–∞–∫ –Ω–∞–∑—ã–≤–∞—é—Ç –∑–≤–µ–∑–¥—É, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑–∞–ª–∞ –≤–æ–ª—Ö–≤–∞–º –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è –•—Ä–∏—Å—Ç–∞?',
    variants: ['–í–∏—Ñ–ª–µ–µ–º—Å–∫–∞—è', '–ê–ª—å–∫–∞—Ñ—Ä–∞—Ö', '–ê–ª—å–∫–∞—Ä–∞–±', '–î–∞–ª–∏–º'],
    answer: 0,
  },
];
const text = document.querySelector('.game__circle-title p');
const questionArea = document.querySelector('.game__question');
const variantArea = document.querySelectorAll('.game__variant');
const salary = document.querySelector('.game__header-count span');
const progress = document.querySelectorAll('.game__progress-price');
const callBlock = document.querySelector('.game__help-block:last-child');
const helpUserBlock = document.querySelector('.game__help-block');
const modal = document.querySelector('.modal');

let stage = 0;
let prize = '';
let answer = null;
let question = null;
let variants = null;
let newVariants = null;
salary.textContent = '0‚Ç¥';

callBlock.addEventListener('click', () => {
  setRandomAnswer();
});

helpUserBlock.addEventListener('click', () => {
  helpUser();
});

variantArea.forEach((elem, i) => {
  elem.addEventListener('click', (e) => {
    onClickAnwser(i);
  });
});

modal.addEventListener('click', (e) => {
  if (e.target.parentNode.classList.contains('modal__close')) {
    modal.classList.remove('modal__show');
    document.body.style.overflow = 'scroll';
  }
});

function onClickAnwser(i) {
  if (answer === i) {
    salary.textContent = progress[stage].textContent + '‚Ç¥';
    changeStage(++stage);
  } else {
    setPrize();
    showGameOver();
  }
}

function setPrize() {
  let num = stage + 1;
  if (num > 5 && num <= 10) {
    prize = `–í—ã –≤—ã–≥—Ä–∞–ª–∏: ${progress[4].innerText}‚Ç¥`;
  } else if (num > 10) {
    prize = `–í—ã –≤—ã–≥—Ä–∞–ª–∏: ${progress[9].innerText}‚Ç¥`;
  } else {
    prize = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ';
  }
}

function replaceGameText(question, variants) {
  questionArea.textContent = question;
  variantArea.forEach((elem, i) => {
    elem.style.display = 'block';
    elem.textContent = `${variants[i]}`;
  });
}

function changeStage(stage) {
  if (stage === 15) {
    showGameOver(true);
    return;
  }
  question = game[stage].question;
  variants = game[stage].variants;
  newVariants = game[stage].variants;
  answer = game[stage].answer;
  progress.forEach((item) => {
    item.classList.remove('progress__active');
    progress[stage].classList.add('progress__active');
  });
  replaceGameText(question, variants);
}

function helpUser() {
  let [rightAnswer] = variants.filter((_, index) => answer === index);
  let newVariant = variants.filter((item) => item != rightAnswer);
  newVariant.length = 1;
  let variant = newVariant[0];
  newVariants = [variant, rightAnswer];
  variantArea.forEach((item) => {
    if (item.textContent != variant && item.textContent != rightAnswer) {
      item.style.display = 'none';
    }
  });
  helpUserBlock.style.display = 'none';
}

function setRandomAnswer() {
  let elements = newVariants.length - 1;
  let index = Math.floor(Math.random() * (elements - 0 + 1)) + 0;
  showFriendAnswer(variantArea[index].textContent);
  callBlock.style.display = 'none';
}

function showGameOver(win = false) {
  document.body.style.overflow = 'hidden';
  let smile;
  let status;
  win ? (smile = 'üòÉ') : (smile = 'üòê');
  win ? (status = '–í–´ –ú–ò–õ–õ–ò–û–ù–ï–†!!!!') : (status = '–ö–û–ù–ï–¶ –ò–ì–†–´');
  win ? (prize = '–í–´ –í–´–ì–†–ê–õ–ò 1000000‚Ç¥!!!!!!') : (prize = prize);
  modal.classList.add('modal__show');
  modal.querySelector('.modal__wrapper').innerHTML = `
  <div class="modal__icon">${smile}</div>
  <div class="modal__title">${status}</div>
  <div class="modal__total">${prize}</div>
  <button class="restart">–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>`;
  document.querySelector('.restart').addEventListener('click', restartGame);
}

function showFriendAnswer(text) {
  document.body.style.overflow = 'hidden';
  modal.classList.add('modal__show');
  modal.querySelector('.modal__wrapper').innerHTML = `
  <div class="modal__close">
  <i class="fa-regular fa-circle-xmark"></i>
  </div>
  <div class="modal__icon">ü§î</div>
  <div class="modal__title">–Ø –¥—É–º–∞—é, —á—Ç–æ –æ—Ç–≤–µ—Ç:</div>
  <div class="modal__text">${text}</div>`;
}

function restartGame() {
  stage = 0;
  prize = '';
  answer = null;
  question = null;
  variants = null;
  newVariants = null;
  salary.textContent = '0‚Ç¥';
  callBlock.style.display = 'block';
  helpUserBlock.style.display = 'block';
  changeStage(stage);
  modal.classList.remove('modal__show');
  document.body.style.overflow = 'scroll';
}

changeStage(stage);

text.innerHTML = text.innerHTML
  .split('')
  .map((char, i) => `<span style="transform: rotate(${i * 12.5}deg)">${char}</span>`)
  .join('');
